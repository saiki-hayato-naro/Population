{"remainingRequest":"C:\\Users\\saiki\\Desktop\\PopulationTrendChart-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\saiki\\Desktop\\PopulationTrendChart-master\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\saiki\\Desktop\\PopulationTrendChart-master\\src\\store\\modules\\lineChart.js","dependencies":[{"path":"C:\\Users\\saiki\\Desktop\\PopulationTrendChart-master\\src\\store\\modules\\lineChart.js","mtime":1650268218116},{"path":"C:\\Users\\saiki\\Desktop\\PopulationTrendChart-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650268377289},{"path":"C:\\Users\\saiki\\Desktop\\PopulationTrendChart-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1650268301904},{"path":"C:\\Users\\saiki\\Desktop\\PopulationTrendChart-master\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1650268369858}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\saiki\\\\Desktop\\\\PopulationTrendChart-master\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport Vue from \"vue\";\nimport { resas } from \"@/apiConfig\";\nimport http from \"../http\";\nimport palette from \"google-palette\";\nvar state = {\n  datasets: [],\n  yAxesLabels: [],\n  colorCodes: palette(\"mpn65\", 47).map(function (rrggbb) {\n    return \"#\" + rrggbb;\n  })\n};\nvar getters = {\n  pickColorCode: function pickColorCode(state) {\n    return function (prefCode) {\n      return state.colorCodes[prefCode - 1];\n    };\n  }\n};\nvar mutations = {\n  addDemographics: function addDemographics(state, payload) {\n    state.datasets.push(payload);\n  },\n  removeDemographics: function removeDemographics(state, payload) {\n    var targetIndex = state.datasets.findIndex(function (demographics) {\n      return demographics.label == payload;\n    });\n    state.datasets.splice(targetIndex, 1);\n  },\n  setYAxesLabels: function setYAxesLabels(state, payload) {\n    state.yAxesLabels = payload;\n  }\n};\nvar actions = {\n  requestDemographics: function () {\n    var _requestDemographics = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, _ref2) {\n      var commit, getters, pref, element, _ref3, data, statusCode, message, colorCode, demographics, yAxesLabels;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit, getters = _ref.getters;\n              pref = _ref2.pref, element = _ref2.element;\n              _context.prev = 2;\n              element.disabled = true;\n              _context.next = 6;\n              return http.get(resas.demographicsAPI, {\n                params: {\n                  prefCode: pref.prefCode\n                }\n              });\n\n            case 6:\n              _ref3 = _context.sent;\n              data = _ref3.data;\n              statusCode = _ref3.statusCode;\n              message = _ref3.message;\n\n              if (statusCode == 403 || statusCode == 404) {\n                Vue.toasted.clear();\n                Vue.toasted.info(message, {\n                  action: {\n                    text: \"Cancel\",\n                    onClick: function onClick(e, toastObject) {\n                      toastObject.goAway(0);\n                    }\n                  }\n                });\n              }\n\n              colorCode = getters.pickColorCode(pref.prefCode);\n              demographics = {\n                label: pref.prefName,\n                data: data.result.data[0].data.map(function (arr) {\n                  return arr.value;\n                }),\n                fill: false,\n                backgroundColor: colorCode,\n                borderColor: colorCode,\n                pointBackgroundColor: colorCode\n              };\n              yAxesLabels = data.result.data[0].data.map(function (arr) {\n                return arr.year;\n              });\n              commit(\"addDemographics\", demographics);\n              commit(\"setYAxesLabels\", yAxesLabels);\n              element.disabled = false;\n              _context.next = 24;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](2);\n              element.disabled = false;\n              Vue.toasted.clear();\n              Vue.toasted.info(_context.t0, {\n                action: {\n                  text: \"Cancel\",\n                  onClick: function onClick(e, toastObject) {\n                    toastObject.goAway(0);\n                  }\n                }\n              });\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 19]]);\n    }));\n\n    function requestDemographics(_x, _x2) {\n      return _requestDemographics.apply(this, arguments);\n    }\n\n    return requestDemographics;\n  }(),\n  removeDemographics: function removeDemographics(_ref4, _ref5) {\n    var commit = _ref4.commit;\n    var prefName = _ref5.prefName;\n    commit(\"removeDemographics\", prefName);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["C:\\Users\\saiki\\Desktop\\PopulationTrendChart-master\\src\\store\\modules\\lineChart.js"],"names":["Vue","resas","http","palette","state","datasets","yAxesLabels","colorCodes","map","rrggbb","getters","pickColorCode","prefCode","mutations","addDemographics","payload","push","removeDemographics","targetIndex","findIndex","demographics","label","splice","setYAxesLabels","actions","requestDemographics","commit","pref","element","disabled","get","demographicsAPI","params","data","statusCode","message","toasted","clear","info","action","text","onClick","e","toastObject","goAway","colorCode","prefName","result","arr","value","fill","backgroundColor","borderColor","pointBackgroundColor","year","namespaced"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport { resas } from \"@/apiConfig\";\nimport http from \"../http\";\nimport palette from \"google-palette\";\n\nconst state = {\n  datasets: [],\n  yAxesLabels: [],\n  colorCodes: palette(\"mpn65\", 47).map(function(rrggbb) {\n    return \"#\" + rrggbb;\n  })\n};\n\nconst getters = {\n  pickColorCode: state => prefCode => {\n    return state.colorCodes[prefCode - 1];\n  }\n};\n\nconst mutations = {\n  addDemographics(state, payload) {\n    state.datasets.push(payload);\n  },\n  removeDemographics(state, payload) {\n    const targetIndex = state.datasets.findIndex(\n      demographics => demographics.label == payload\n    );\n    state.datasets.splice(targetIndex, 1);\n  },\n  setYAxesLabels(state, payload) {\n    state.yAxesLabels = payload;\n  }\n};\n\nconst actions = {\n  async requestDemographics({ commit, getters }, { pref, element }) {\n    try {\n      element.disabled = true;\n      const { data, statusCode, message } = await http.get(\n        resas.demographicsAPI,\n        {\n          params: { prefCode: pref.prefCode }\n        }\n      );\n      if (statusCode == 403 || statusCode == 404) {\n        Vue.toasted.clear();\n        Vue.toasted.info(message, {\n          action: {\n            text: \"Cancel\",\n            onClick: (e, toastObject) => {\n              toastObject.goAway(0);\n            }\n          }\n        });\n      }\n      const colorCode = getters.pickColorCode(pref.prefCode);\n      const demographics = {\n        label: pref.prefName,\n        data: data.result.data[0].data.map(arr => arr.value),\n        fill: false,\n        backgroundColor: colorCode,\n        borderColor: colorCode,\n        pointBackgroundColor: colorCode\n      };\n      const yAxesLabels = data.result.data[0].data.map(arr => arr.year);\n      commit(\"addDemographics\", demographics);\n      commit(\"setYAxesLabels\", yAxesLabels);\n      element.disabled = false;\n    } catch (error) {\n      element.disabled = false;\n      Vue.toasted.clear();\n      Vue.toasted.info(error, {\n        action: {\n          text: \"Cancel\",\n          onClick: (e, toastObject) => {\n            toastObject.goAway(0);\n          }\n        }\n      });\n    }\n  },\n  removeDemographics({ commit }, { prefName }) {\n    commit(\"removeDemographics\", prefName);\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions\n};\n"]}]}